# This is the main configuration file for the application.
# ~~~~~

version="0.3.6"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="u>]V>c=pt[X?=sFs5M?:NH>eEA0w<n[:@XJCZq0Wo]UOUe]/n>aV2Zd@y^v6uP8O"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

akka {
  default-dispatcher.core-pool-size-max = 64
//  debug.receive = on
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loglevel = "DEBUG"
}

contexts {
  dataset-harvesting-execution-context {
    fork-join-executor {
      parallelism-max = 3
    }
  }
}


orgId = "vagrant"

thesaurus = true
categories = false

triple-store = "http://localhost:3030/vagrant"

//triple-stores = {
//  production = "http://localhost:3030/vagrant",
//  acceptance = "http://localhost:3030/vagrant_acceptance"
//}

rdfBaseUrl = "http://narthex.localhost"

# replace this dummy with the actual token from your development Nave instance
naveAuthToken = "4fc894433b3b914356f8a6887b39fcb26f249026"

# Set this to true to use the Nave Bulk APi
useBulkApi = false

# the ip-adress where the development nave can be reached
naveApiUrl = "http://localhost:8000"


oauth2 {
  id = "None"
  secret = "None"
  server = "http://nave.localhost/o"
  userUrl = "http://nave.localhost/en/api/token-user/"
  callbackBaseUrl = "http://nave.localhost"
}

play.mailer.mock = true

domains = {
  narthex = "http://narthex.localhost"
  nave = "http://nave.localhost"
}
