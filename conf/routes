# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                           web.MainController.root
GET         /narthex/                                                   web.MainController.index

# JavaScript routes object
GET         /narthex/jsroutes.js                                        web.MainController.jsRoutes()

# Routes used by Angular
# ~~~~

# Users
POST        /narthex/login                                              web.MainController.login
GET         /narthex/checkLogin                                         web.MainController.checkLogin
GET         /narthex/logout                                             web.MainController.logout
POST        /narthex/set-profile                                        web.MainController.setProfile
GET         /narthex/list-actors                                        web.MainController.listActors
POST        /narthex/create-actor                                       web.MainController.createActor
POST        /narthex/set-password                                       web.MainController.setPassword

# File Handling
GET         /narthex/app/datasets                                       web.AppController.listDatasets
GET         /narthex/app/prefixes                                       web.AppController.listPrefixes
GET         /narthex/app/dataset/:spec/create/:character/:prefix        web.AppController.createDataset(spec, character, prefix)
POST        /narthex/app/dataset/:spec/upload                           web.AppController.uploadDataset(spec)
POST        /narthex/app/dataset/:spec/set-properties                   web.AppController.setDatasetProperties(spec)
POST        /narthex/app/dataset/:spec/set-delimiter                    web.AppController.setRecordDelimiter(spec)
GET         /narthex/app/dataset/:spec/index                            web.AppController.index(spec)
GET         /narthex/app/dataset/:spec/info                             web.AppController.datasetInfo(spec)
GET         /narthex/app/dataset/:spec/progress                         web.AppController.datasetProgress(spec)
GET         /narthex/app/dataset/:spec/command/:command                 web.AppController.command(spec, command)
GET         /narthex/app/dataset/:spec/status/*path                     web.AppController.nodeStatus(spec, path)
GET         /narthex/app/dataset/:spec/sample/:size/*path               web.AppController.sample(spec, path, size:Int)
GET         /narthex/app/dataset/:spec/histogram/:size/*path            web.AppController.histogram(spec, path, size:Int)

GET         /narthex/app/dataset/:spec/term/source-paths                web.AppController.getTermSourcePaths(spec)
GET         /narthex/app/dataset/:spec/term/mappings                    web.AppController.getTermMappings(spec)
POST        /narthex/app/dataset/:spec/term/set-mapping                 web.AppController.setTermMapping(spec)

GET         /narthex/app/skos/list                                      web.AppController.listSkos
GET         /narthex/app/skos/:spec/create                              web.AppController.createSkos(spec)
POST        /narthex/app/skos/:spec/upload                              web.AppController.uploadSkos(spec)
POST        /narthex/app/skos/:spec/set-properties                      web.AppController.setSkosProperties(spec)
GET         /narthex/app/skos/:spec/info                                web.AppController.skosInfo(spec)
GET         /narthex/app/skos/:spec/statistics                          web.AppController.skosStatistics(spec)
GET         /narthex/app/skos/:spec/:sought                             web.AppController.searchSkos(spec, sought)
GET         /narthex/app/skos/:specA/:specB/get-mappings                web.AppController.getSkosMappings(specA, specB)
POST        /narthex/app/skos/:specA/:specB/toggle-mapping              web.AppController.toggleSkosMapping(specA, specB)


GET         /narthex/app/category-list                                  web.AppController.getCategoryList
GET         /narthex/app/sheets-list                                    web.AppController.listSheets
GET         /narthex/app/sheet/:spec                                    web.AppController.sheet(spec)
GET         /narthex/app/dataset/:spec/category/source-paths            web.AppController.getCategorySourcePaths(spec)
GET         /narthex/app/dataset/:spec/category/mappings                web.AppController.getCategoryMappings(spec)
POST        /narthex/app/dataset/:spec/category/set-mapping             web.AppController.setCategoryMapping(spec)
GET         /narthex/app/categories/gather-counts                       web.AppController.gatherCategoryCounts

GET         /narthex/app/dataset/:spec/sip-list                         web.AppController.listSipFiles(spec)
GET         /narthex/app/dataset/:spec/delete-latest                    web.AppController.deleteLatestSipFile(spec)

# sip-app
GET         /narthex/sip-app                                            web.SipAppController.listSipZips()
GET         /narthex/sip-app/:spec                                      web.SipAppController.downloadSipZip(spec)
POST        /narthex/sip-app/:spec/:zipFileName                         web.SipAppController.uploadSipZip(spec, zipFileName)

GET         /narthex/api/:apiKey                                        web.APIController.listDatasets(apiKey)
GET         /narthex/api/:apiKey/:spec                                  web.APIController.pathsJSON(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/tree                             web.APIController.indexJSON(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/index                            web.APIController.indexText(apiKey, spec, path="")
GET         /narthex/api/:apiKey/:spec/mappings                         web.APIController.termMappings(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/index/*path                      web.APIController.indexText(apiKey, spec, path)
GET         /narthex/api/:apiKey/:spec/unique/*path                     web.APIController.uniqueText(apiKey, spec, path)
GET         /narthex/api/:apiKey/:spec/histogram/*path                  web.APIController.histogramText(apiKey, spec, path)

# Static
GET         /narthex/webjars/*file                                      controllers.WebJarAssets.at(file)
GET         /narthex/assets/*file                                       controllers.Assets.at(path="/public", file)
