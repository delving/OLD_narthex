# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                                web.MainController.root
GET         /narthex/                                                        web.MainController.index

# JavaScript routes object
GET         /narthex/jsroutes.js                                             web.MainController.jsRoutes()

# Routes used by Angular
# ~~~~

# Authentication
POST        /narthex/login                                                   web.MainController.login
GET         /narthex/checkLogin                                              web.MainController.checkLogin
GET         /narthex/logout                                                  web.MainController.logout

# OAuth2 Stuff
GET         /narthex/_oauth-callback                                         web.MainController.oauthCallback(code: Option[String], state: Option[String])
GET         /narthex/_oauth-success                                          web.MainController.oauthSuccess

# Users
POST        /narthex/set-profile                                             web.MainController.setProfile
GET         /narthex/list-actors                                             web.MainController.listActors
POST        /narthex/create-actor                                            web.MainController.createActor
POST        /narthex/delete-actor                                            web.MainController.deleteActor
POST        /narthex/disable-actor                                           web.MainController.disableActor
POST        /narthex/enable-actor                                            web.MainController.enableActor
POST        /narthex/make-admin                                              web.MainController.makeAdmin
POST        /narthex/remove-admin                                            web.MainController.removeAdmin
POST        /narthex/set-password                                            web.MainController.setPassword
GET         /narthex/test-email/:emailType                                   web.MainController.testEmail(emailType)

# File Handling
GET         /narthex/app/dataset-socket                                      web.AppController.datasetSocket
GET         /narthex/app/dataset-list                                        web.AppController.listDatasets
GET         /narthex/app/prefixes                                            web.AppController.listPrefixes
GET         /narthex/app/dataset/:spec/create/:character/:prefix             web.AppController.createDataset(spec, character, prefix)
POST        /narthex/app/dataset/:spec/upload                                web.AppController.uploadDataset(spec)
POST        /narthex/app/dataset/:spec/set-properties                        web.AppController.setDatasetProperties(spec)
POST        /narthex/app/dataset/:spec/toggle-skos                           web.AppController.toggleSkosifiedField(spec)
POST        /narthex/app/dataset/:spec/set-delimiter                         web.AppController.setRecordDelimiter(spec)
GET         /narthex/app/dataset/:spec/index                                 web.AppController.index(spec)
GET         /narthex/app/dataset/:spec/info                                  web.AppController.datasetInfo(spec)
GET         /narthex/app/dataset/:spec/command/:command                      web.AppController.command(spec, command)
GET         /narthex/app/dataset/:spec/status/*path                          web.AppController.nodeStatus(spec, path)
GET         /narthex/app/dataset/:spec/sample/:size/*path                    web.AppController.sample(spec, path, size:Int)
GET         /narthex/app/dataset/:spec/histogram/:size/*path                 web.AppController.histogram(spec, path, size:Int)
GET         /narthex/app/dataset/:spec/toggle-production                     web.AppController.toggleDatasetProduction(spec)

GET         /narthex/app/dataset/:spec/term/vocab                            web.AppController.getTermVocabulary(spec)
GET         /narthex/app/dataset/:spec/term/get-mappings                     web.AppController.getTermMappings(spec)
POST        /narthex/app/dataset/:spec/term/:vocabSpec/toggle-mapping        web.AppController.toggleTermMapping(spec, vocabSpec)
GET         /narthex/app/dataset/:spec/category/get-mappings                 web.AppController.getCategoryMappings(spec)

GET         /narthex/app/skos/list                                           web.AppController.listVocabularies
GET         /narthex/app/skos/:spec/create                                   web.AppController.createVocabulary(spec)
GET         /narthex/app/skos/:spec/delete                                   web.AppController.deleteVocabulary(spec)
POST        /narthex/app/skos/:spec/upload                                   web.AppController.uploadVocabulary(spec)
POST        /narthex/app/skos/:spec/set-properties                           web.AppController.setVocabularyProperties(spec)
GET         /narthex/app/skos/:spec/info                                     web.AppController.vocabularyInfo(spec)
GET         /narthex/app/skos/:spec/statistics                               web.AppController.vocabularyStatistics(spec)
GET         /narthex/app/skos/:spec/languages                                web.AppController.getVocabularyLanguages(spec)
GET         /narthex/app/skos/:spec/search/:sought/:language                 web.AppController.searchVocabulary(spec, sought, language)
GET         /narthex/app/skos/:specA/:specB/get-mappings                     web.AppController.getSkosMappings(specA, specB)
POST        /narthex/app/skos/:specA/:specB/toggle-mapping                   web.AppController.toggleSkosMapping(specA, specB)


GET         /narthex/app/category-list                                       web.AppController.getCategoryList
GET         /narthex/app/sheets-list                                         web.AppController.listSheets
GET         /narthex/app/sheet/:spec                                         web.AppController.sheet(spec)
GET         /narthex/app/categories/gather-counts                            web.AppController.gatherCategoryCounts

GET         /narthex/app/dataset/:spec/sip-list                              web.AppController.listSipFiles(spec)
GET         /narthex/app/dataset/:spec/delete-latest                         web.AppController.deleteLatestSipFile(spec)

# sip-app
GET         /narthex/sip-app                                                 web.SipAppController.listSipZips()
GET         /narthex/sip-app/:spec                                           web.SipAppController.downloadSipZip(spec)
POST        /narthex/sip-app/:spec/:zipFileName                              web.SipAppController.uploadSipZip(spec, zipFileName)

#GET         /narthex/api/:apiKey                                             web.APIController.listDatasets(apiKey)
GET         /narthex/api/:apiKey/:spec                                       web.APIController.pathsJSON(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/errors                                web.APIController.processingErrorsText(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/sourced                               web.APIController.processingSourcedText(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/processed                             web.APIController.processingProcessedText(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/log                                   web.APIController.processingHarvestingLog(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/tree                                  web.APIController.indexJSON(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/unique/*path                          web.APIController.uniqueText(apiKey, spec, path)
GET         /narthex/api/:apiKey/:spec/histogram/*path                       web.APIController.histogramText(apiKey, spec, path)

# Static
GET         /narthex/webjars/*file                                           controllers.WebJarAssets.at(file)
GET         /narthex/assets/*file                                            controllers.Assets.at(path="/public", file)

#GET         /non-public/monitoring/metrics                                   @com.kenshoo.play.metrics.MetricsController.metrics
