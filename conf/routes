# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                    controllers.Application.index

# JavaScript routes object
GET         /jsroutes.js                                         controllers.Application.jsRoutes()

# Routes used by Angular
# ~~~~

# Authentication
GET         /checkLogin                                          controllers.Application.checkLogin
POST        /login                                               controllers.Application.login
GET         /logout                                              controllers.Application.logout
GET         /room/:id                                            controllers.Application.roomConnect(id)

# File Handling
POST        /dashboard/upload                                    controllers.Dashboard.upload
GET         /dashboard/list                                      controllers.Dashboard.list
GET         /dashboard/work                                      controllers.Dashboard.work
GET         /dashboard/:fileName                                 controllers.Dashboard.index(fileName)
GET         /dashboard/:fileName/status                          controllers.Dashboard.status(fileName)
GET         /dashboard/:fileName/zap                             controllers.Dashboard.zap(fileName)
GET         /dashboard/:fileName/status/*path                    controllers.Dashboard.nodeStatus(fileName, path)
GET         /dashboard/:fileName/sample/:size/*path              controllers.Dashboard.sample(fileName, path, size:Int)
GET         /dashboard/:fileName/histogram/:size/*path           controllers.Dashboard.histogram(fileName, path, size:Int)
POST        /dashboard/:fileName/record/set-delimiter            controllers.Dashboard.setRecordDelimiter(fileName)
GET         /dashboard/:fileName/record/delimiter                controllers.Dashboard.recordDelimiter(fileName)
GET         /dashboard/:fileName/record/can-save                 controllers.Dashboard.canSaveRecords(fileName)
GET         /dashboard/:fileName/record/save                     controllers.Dashboard.saveRecords(fileName)
POST        /dashboard/:fileName/record/query                    controllers.Dashboard.queryRecords(fileName)
POST        /dashboard/:fileName/record/set-mapping              controllers.Dashboard.setMapping(fileName)

GET         /dashboard/skos/list                                 controllers.Dashboard.listSkos
GET         /dashboard/skos/:name/:sought                        controllers.Dashboard.searchSkos(name, sought)

GET         /api/:apiKey/:email/:fileName/tree                   controllers.API.indexJSON(apiKey, email, fileName)
GET         /api/:apiKey/:email/:fileName/index                  controllers.API.indexText(apiKey, email, fileName, path="")
GET         /api/:apiKey/:email/:fileName/*path/index            controllers.API.indexText(apiKey, email, fileName, path)
GET         /api/:apiKey/:email/:fileName/*path/unique           controllers.API.uniqueText(apiKey, email, fileName, path)
GET         /api/:apiKey/:email/:fileName/*path/histogram        controllers.API.histogramText(apiKey, email, fileName, path)


#GET         /oai-pmh                                             controllers.OaiPmh.service

# Static
# ~~~~

# Map static resources from the /public folder to the /assets URL path
#GET     /lib/require.js         controllers.WebJarAssets.requirejs
### Enable www.WebJars.org based resources to be returned
GET         /webjars/*file                                       controllers.CdnWebJarAssets.at(file)
# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                        controllers.Assets.at(path="/public", file)
