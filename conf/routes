# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                                   web.MainController.root
GET         /narthex/                                                           web.MainController.index

# JavaScript routes object
GET         /narthex/jsroutes.js                                                web.MainController.jsRoutes()

# Routes used by Angular
# ~~~~

# Users
POST        /narthex/login                                                      web.MainController.login
GET         /narthex/checkLogin                                                 web.MainController.checkLogin
GET         /narthex/logout                                                     web.MainController.logout
POST        /narthex/set-profile                                                web.MainController.setProfile
GET         /narthex/list-actors                                                web.MainController.listActors
POST        /narthex/create-actor                                               web.MainController.createActor

# File Handling
GET         /narthex/app/datasets                                               web.AppController.listDatasets
GET         /narthex/app/prefixes                                               web.AppController.listPrefixes
GET         /narthex/app/:spec/create/:character/:prefix                        web.AppController.create(spec, character, prefix)
POST        /narthex/app/:spec/upload                                           web.AppController.upload(spec)
POST        /narthex/app/:spec/set-properties                                   web.AppController.setProperties(spec)
POST        /narthex/app/:spec/harvest                                          web.AppController.harvest(spec)
POST        /narthex/app/:spec/set-delimiter                                    web.AppController.setRecordDelimiter(spec)
GET         /narthex/app/:spec/index                                            web.AppController.index(spec)
GET         /narthex/app/:spec/dataset-info                                     web.AppController.datasetInfo(spec)
GET         /narthex/app/:spec/dataset-progress                                 web.AppController.datasetProgress(spec)
GET         /narthex/app/:spec/command/:command                                 web.AppController.command(spec, command)
GET         /narthex/app/:spec/status/*path                                     web.AppController.nodeStatus(spec, path)
GET         /narthex/app/:spec/sample/:size/*path                               web.AppController.sample(spec, path, size:Int)
GET         /narthex/app/:spec/histogram/:size/*path                            web.AppController.histogram(spec, path, size:Int)

GET         /narthex/app/skos/list                                              web.AppController.listConceptSchemes
GET         /narthex/app/skos/:conceptSchemeName/:sought                        web.AppController.searchConceptScheme(conceptSchemeName, sought)
GET         /narthex/app/skos/:schemeNameA/:schemeNameB/get-mappings            web.AppController.getThesaurusMappings(schemeNameA, schemeNameB)
POST        /narthex/app/skos/:schemeNameA/:schemeNameB/set-mapping             web.AppController.setThesaurusMapping(schemeNameA, schemeNameB)
GET         /narthex/app/:spec/term/source-paths                                web.AppController.getTermSourcePaths(spec)
GET         /narthex/app/:spec/term/mappings                                    web.AppController.getTermMappings(spec)
POST        /narthex/app/:spec/term/set-mapping                                 web.AppController.setTermMapping(spec)

GET         /narthex/app/category-list                                          web.AppController.getCategoryList
GET         /narthex/app/sheets-list                                            web.AppController.listSheets
GET         /narthex/app/sheet/:spec                                            web.AppController.sheet(spec)
GET         /narthex/app/:spec/category/source-paths                            web.AppController.getCategorySourcePaths(spec)
GET         /narthex/app/:spec/category/mappings                                web.AppController.getCategoryMappings(spec)
POST        /narthex/app/:spec/category/set-mapping                             web.AppController.setCategoryMapping(spec)
GET         /narthex/app/categories/gather-counts                               web.AppController.gatherCategoryCounts

GET         /narthex/app/:spec/sip-list                                         web.AppController.listSipFiles(spec)
GET         /narthex/app/:spec/delete-latest                                    web.AppController.deleteLatestSipFile(spec)

# sip-app
GET         /narthex/sip-app                                                    web.SipAppController.listSipZips()
GET         /narthex/sip-app/:spec                                              web.SipAppController.downloadSipZip(spec)
POST        /narthex/sip-app/:spec/:zipFileName                                 web.SipAppController.uploadSipZip(spec, zipFileName)

GET         /narthex/api/:apiKey                                                web.APIController.listDatasets(apiKey)
GET         /narthex/api/:apiKey/:spec                                          web.APIController.pathsJSON(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/tree                                     web.APIController.indexJSON(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/index                                    web.APIController.indexText(apiKey, spec, path="")
GET         /narthex/api/:apiKey/:spec/mappings                                 web.APIController.termMappings(apiKey, spec)
GET         /narthex/api/:apiKey/:spec/index/*path                              web.APIController.indexText(apiKey, spec, path)
GET         /narthex/api/:apiKey/:spec/unique/*path                             web.APIController.uniqueText(apiKey, spec, path)
GET         /narthex/api/:apiKey/:spec/histogram/*path                          web.APIController.histogramText(apiKey, spec, path)
GET         /narthex/api/:apiKey/skos/:schemeNameA/:schemeNameB/mappings        web.APIController.thesaurusMappings(apiKey, schemeNameA, schemeNameB)

# Static
GET         /narthex/webjars/*file                                              controllers.WebJarAssets.at(file)
GET         /narthex/assets/*file                                               controllers.Assets.at(path="/public", file)
