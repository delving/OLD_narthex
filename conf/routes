# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                            web.Application.root
GET         /narthex/                                                    web.Application.index

# JavaScript routes object
GET         /narthex/jsroutes.js                                         web.Application.jsRoutes()

# Routes used by Angular
# ~~~~

# Authentication
GET         /narthex/checkLogin                                          web.Application.checkLogin
POST        /narthex/login                                               web.Application.login
GET         /narthex/logout                                              web.Application.logout

# File Handling
GET         /narthex/dashboard/datasets                                  web.Dashboard.listDatasets
GET         /narthex/dashboard/prefixes                                  web.Dashboard.listPrefixes
GET         /narthex/dashboard/:datasetName/create/:prefix               web.Dashboard.create(datasetName, prefix)
POST        /narthex/dashboard/:datasetName/upload                       web.Dashboard.upload(datasetName)
POST        /narthex/dashboard/:datasetName/harvest                      web.Dashboard.harvest(datasetName)
POST        /narthex/dashboard/:datasetName/set-harvest-cron             web.Dashboard.setHarvestCron(datasetName)
POST        /narthex/dashboard/:datasetName/set-metadata                 web.Dashboard.setMetadata(datasetName)
POST        /narthex/dashboard/:datasetName/set-publication              web.Dashboard.setPublication(datasetName)
POST        /narthex/dashboard/:datasetName/set-categories               web.Dashboard.setCategories(datasetName)
POST        /narthex/dashboard/:datasetName/set-delimiter                web.Dashboard.setRecordDelimiter(datasetName)
GET         /narthex/dashboard/:datasetName/analyze                      web.Dashboard.analyze(datasetName)
GET         /narthex/dashboard/:datasetName/index                        web.Dashboard.index(datasetName)
GET         /narthex/dashboard/:datasetName/dataset-info                 web.Dashboard.datasetInfo(datasetName)
GET         /narthex/dashboard/:datasetName/command/:command             web.Dashboard.command(datasetName, command)
GET         /narthex/dashboard/:datasetName/status/*path                 web.Dashboard.nodeStatus(datasetName, path)
GET         /narthex/dashboard/:datasetName/sample/:size/*path           web.Dashboard.sample(datasetName, path, size:Int)
GET         /narthex/dashboard/:datasetName/histogram/:size/*path        web.Dashboard.histogram(datasetName, path, size:Int)
GET         /narthex/dashboard/:datasetName/save-records                 web.Dashboard.saveRecords(datasetName)

POST        /narthex/dashboard/:datasetName/query-records                web.Dashboard.queryRecords(datasetName)

GET         /narthex/dashboard/skos/list                                 web.Dashboard.listConceptSchemes
GET         /narthex/dashboard/skos/:conceptSchemeName/:sought           web.Dashboard.searchConceptScheme(conceptSchemeName, sought)
POST        /narthex/dashboard/skos/set-mapping                          web.Dashboard.setThesaurusMapping()
GET         /narthex/dashboard/:datasetName/term/source-paths            web.Dashboard.getTermSourcePaths(datasetName)
GET         /narthex/dashboard/:datasetName/term/mappings                web.Dashboard.getTermMappings(datasetName)
POST        /narthex/dashboard/:datasetName/term/set-mapping             web.Dashboard.setTermMapping(datasetName)

GET         /narthex/dashboard/category-list                             web.Dashboard.getCategoryList
GET         /narthex/dashboard/sheets-list                               web.Dashboard.listSheets
GET         /narthex/dashboard/sheet/:datasetName                        web.Dashboard.sheet(datasetName)
GET         /narthex/dashboard/:datasetName/category/source-paths        web.Dashboard.getCategorySourcePaths(datasetName)
GET         /narthex/dashboard/:datasetName/category/mappings            web.Dashboard.getCategoryMappings(datasetName)
POST        /narthex/dashboard/:datasetName/category/set-mapping         web.Dashboard.setCategoryMapping(datasetName)
GET         /narthex/dashboard/categories/gather-counts                  web.Dashboard.gatherCategoryCounts

GET         /narthex/dashboard/:datasetName/sip-list                     web.Dashboard.listSipFiles(datasetName)
GET         /narthex/dashboard/:datasetName/delete-latest                web.Dashboard.deleteLatestSipFile(datasetName)

# sip-app
GET         /narthex/sip-app                                             web.SipAppController.listSipZips()
GET         /narthex/sip-app/:datasetName                                web.SipAppController.downloadSipZip(datasetName)
POST        /narthex/sip-app/:datasetName/:zipFileName                   web.SipAppController.uploadSipZip(datasetName, zipFileName)

GET         /narthex/api/:apiKey                                         web.APIController.listDatasets(apiKey)
GET         /narthex/api/:apiKey/:datasetName                            web.APIController.pathsJSON(apiKey, datasetName)
GET         /narthex/api/:apiKey/:datasetName/tree                       web.APIController.indexJSON(apiKey, datasetName)
GET         /narthex/api/:apiKey/:datasetName/index                      web.APIController.indexText(apiKey, datasetName, path="")
GET         /narthex/api/:apiKey/:datasetName/mappings                   web.APIController.mappings(apiKey, datasetName)
GET         /narthex/api/:apiKey/:datasetName/ids/:since                 web.APIController.ids(apiKey, datasetName, since)
GET         /narthex/api/:apiKey/:datasetName/record/:id                 web.APIController.rawRecord(apiKey, datasetName, id)
GET         /narthex/api/:apiKey/:datasetName/record/:id/enriched        web.APIController.enrichedRecord(apiKey, datasetName, id)
GET         /narthex/api/:apiKey/:datasetName/index/*path                web.APIController.indexText(apiKey, datasetName, path)
GET         /narthex/api/:apiKey/:datasetName/unique/*path               web.APIController.uniqueText(apiKey, datasetName, path)
GET         /narthex/api/:apiKey/:datasetName/histogram/*path            web.APIController.histogramText(apiKey, datasetName, path)

GET         /narthex/oai-pmh/:accessKey                                  harvest.OaiPmh.service(accessKey)
GET         /narthex/oai-pmh/enriched/:accessKey                         harvest.OaiPmh.serviceEnriched(accessKey)

# Static
GET         /narthex/webjars/*file                                       controllers.WebJarAssets.at(file)
GET         /narthex/assets/*file                                        controllers.Assets.at(path="/public", file)
