# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                                   web.MainController.root
GET         /narthex/                                                           web.MainController.index

# JavaScript routes object
GET         /narthex/jsroutes.js                                                web.MainController.jsRoutes()

# Routes used by Angular
# ~~~~

# Authentication
GET         /narthex/checkLogin                                                 web.MainController.checkLogin
POST        /narthex/login                                                      web.MainController.login
GET         /narthex/logout                                                     web.MainController.logout

# File Handling
GET         /narthex/app/datasets                                               web.AppController.listDatasets
GET         /narthex/app/prefixes                                               web.AppController.listPrefixes
GET         /narthex/app/:datasetName/create/:prefix                            web.AppController.create(datasetName, prefix)
POST        /narthex/app/:datasetName/upload                                    web.AppController.upload(datasetName)
POST        /narthex/app/:datasetName/harvest                                   web.AppController.harvest(datasetName)
POST        /narthex/app/:datasetName/set-harvest-cron                          web.AppController.setHarvestCron(datasetName)
POST        /narthex/app/:datasetName/set-metadata                              web.AppController.setMetadata(datasetName)
POST        /narthex/app/:datasetName/set-publication                           web.AppController.setPublication(datasetName)
POST        /narthex/app/:datasetName/set-categories                            web.AppController.setCategories(datasetName)
POST        /narthex/app/:datasetName/set-delimiter                             web.AppController.setRecordDelimiter(datasetName)
GET         /narthex/app/:datasetName/index                                     web.AppController.index(datasetName)
GET         /narthex/app/:datasetName/dataset-info                              web.AppController.datasetInfo(datasetName)
GET         /narthex/app/:datasetName/dataset-progress                          web.AppController.datasetProgress(datasetName)
GET         /narthex/app/:datasetName/command/:command                          web.AppController.command(datasetName, command)
GET         /narthex/app/:datasetName/status/*path                              web.AppController.nodeStatus(datasetName, path)
GET         /narthex/app/:datasetName/sample/:size/*path                        web.AppController.sample(datasetName, path, size:Int)
GET         /narthex/app/:datasetName/histogram/:size/*path                     web.AppController.histogram(datasetName, path, size:Int)

GET         /narthex/app/skos/list                                              web.AppController.listConceptSchemes
GET         /narthex/app/skos/:conceptSchemeName/:sought                        web.AppController.searchConceptScheme(conceptSchemeName, sought)
GET         /narthex/app/skos/:schemeNameA/:schemeNameB/get-mappings            web.AppController.getThesaurusMappings(schemeNameA, schemeNameB)
POST        /narthex/app/skos/:schemeNameA/:schemeNameB/set-mapping             web.AppController.setThesaurusMapping(schemeNameA, schemeNameB)
GET         /narthex/app/:datasetName/term/source-paths                         web.AppController.getTermSourcePaths(datasetName)
GET         /narthex/app/:datasetName/term/mappings                             web.AppController.getTermMappings(datasetName)
POST        /narthex/app/:datasetName/term/set-mapping                          web.AppController.setTermMapping(datasetName)

GET         /narthex/app/category-list                                          web.AppController.getCategoryList
GET         /narthex/app/sheets-list                                            web.AppController.listSheets
GET         /narthex/app/sheet/:datasetName                                     web.AppController.sheet(datasetName)
GET         /narthex/app/:datasetName/category/source-paths                     web.AppController.getCategorySourcePaths(datasetName)
GET         /narthex/app/:datasetName/category/mappings                         web.AppController.getCategoryMappings(datasetName)
POST        /narthex/app/:datasetName/category/set-mapping                      web.AppController.setCategoryMapping(datasetName)
GET         /narthex/app/categories/gather-counts                               web.AppController.gatherCategoryCounts

GET         /narthex/app/:datasetName/sip-list                                  web.AppController.listSipFiles(datasetName)
GET         /narthex/app/:datasetName/delete-latest                             web.AppController.deleteLatestSipFile(datasetName)

# sip-app
GET         /narthex/sip-app                                                    web.SipAppController.listSipZips()
GET         /narthex/sip-app/:datasetName                                       web.SipAppController.downloadSipZip(datasetName)
POST        /narthex/sip-app/:datasetName/:zipFileName                          web.SipAppController.uploadSipZip(datasetName, zipFileName)

GET         /narthex/api/:apiKey                                                web.APIController.listDatasets(apiKey)
GET         /narthex/api/:apiKey/:datasetName                                   web.APIController.pathsJSON(apiKey, datasetName)
GET         /narthex/api/:apiKey/:datasetName/tree                              web.APIController.indexJSON(apiKey, datasetName)
GET         /narthex/api/:apiKey/:datasetName/index                             web.APIController.indexText(apiKey, datasetName, path="")
GET         /narthex/api/:apiKey/:datasetName/mappings                          web.APIController.termMappings(apiKey, datasetName)
GET         /narthex/api/:apiKey/:datasetName/index/*path                       web.APIController.indexText(apiKey, datasetName, path)
GET         /narthex/api/:apiKey/:datasetName/unique/*path                      web.APIController.uniqueText(apiKey, datasetName, path)
GET         /narthex/api/:apiKey/:datasetName/histogram/*path                   web.APIController.histogramText(apiKey, datasetName, path)
GET         /narthex/api/:apiKey/skos/:schemeNameA/:schemeNameB/mappings        web.APIController.thesaurusMappings(apiKey, schemeNameA, schemeNameB)

# Static
GET         /narthex/webjars/*file                                              controllers.WebJarAssets.at(file)
GET         /narthex/assets/*file                                               controllers.Assets.at(path="/public", file)
