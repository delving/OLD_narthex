# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                         web.Application.root
GET         /narthex/                                                 web.Application.index

# JavaScript routes object
GET         /narthex/jsroutes.js                                      web.Application.jsRoutes()

# Routes used by Angular
# ~~~~

# Authentication
GET         /narthex/checkLogin                                       web.Application.checkLogin
POST        /narthex/login                                            web.Application.login
GET         /narthex/logout                                           web.Application.logout

# File Handling
GET         /narthex/dashboard/list                                   web.Dashboard.list
POST        /narthex/dashboard/:fileName/upload                       web.Dashboard.upload(fileName)
POST        /narthex/dashboard/:fileName/harvest                      web.Dashboard.harvest(fileName)
POST        /narthex/dashboard/:fileName/set-harvest-cron             web.Dashboard.setHarvestCron(fileName)
POST        /narthex/dashboard/:fileName/set-metadata                 web.Dashboard.setMetadata(fileName)
POST        /narthex/dashboard/:fileName/set-publication              web.Dashboard.setPublication(fileName)
POST        /narthex/dashboard/:fileName/set-categories               web.Dashboard.setCategories(fileName)
POST        /narthex/dashboard/:fileName/set-delimiter                web.Dashboard.setRecordDelimiter(fileName)
GET         /narthex/dashboard/:fileName/analyze                      web.Dashboard.analyze(fileName)
GET         /narthex/dashboard/:fileName/index                        web.Dashboard.index(fileName)
GET         /narthex/dashboard/:fileName/dataset-info                 web.Dashboard.datasetInfo(fileName)
GET         /narthex/dashboard/:fileName/revert/:command              web.Dashboard.revert(fileName, command)
GET         /narthex/dashboard/:fileName/status/*path                 web.Dashboard.nodeStatus(fileName, path)
GET         /narthex/dashboard/:fileName/sample/:size/*path           web.Dashboard.sample(fileName, path, size:Int)
GET         /narthex/dashboard/:fileName/histogram/:size/*path        web.Dashboard.histogram(fileName, path, size:Int)
GET         /narthex/dashboard/:fileName/save-records                 web.Dashboard.saveRecords(fileName)

POST        /narthex/dashboard/:fileName/query-records                web.Dashboard.queryRecords(fileName)

GET         /narthex/dashboard/skos/list                              web.Dashboard.listSkos
GET         /narthex/dashboard/skos/:name/:sought                     web.Dashboard.searchSkos(name, sought)
GET         /narthex/dashboard/:fileName/term/source-paths            web.Dashboard.getTermSourcePaths(fileName)
GET         /narthex/dashboard/:fileName/term/mappings                web.Dashboard.getTermMappings(fileName)
POST        /narthex/dashboard/:fileName/term/set-mapping             web.Dashboard.setTermMapping(fileName)

GET         /narthex/dashboard/category-list                          web.Dashboard.getCategoryList
GET         /narthex/dashboard/:fileName/category/source-paths        web.Dashboard.getCategorySourcePaths(fileName)
GET         /narthex/dashboard/:fileName/category/mappings            web.Dashboard.getCategoryMappings(fileName)
POST        /narthex/dashboard/:fileName/category/set-mapping         web.Dashboard.setCategoryMapping(fileName)
GET         /narthex/dashboard/categories/gather-counts               web.Dashboard.gatherCategoryCounts

GET         /narthex/dashboard/sip-list                               web.Dashboard.listSipFiles
GET         /narthex/dashboard/delete-sip/:fileName                   web.Dashboard.deleteSipFile(fileName)


GET         /narthex/api/:apiKey                                      web.APIController.listDatasets(apiKey)
GET         /narthex/api/:apiKey/:fileName                            web.APIController.pathsJSON(apiKey, fileName)
GET         /narthex/api/:apiKey/:fileName/tree                       web.APIController.indexJSON(apiKey, fileName)
GET         /narthex/api/:apiKey/:fileName/index                      web.APIController.indexText(apiKey, fileName, path="")
GET         /narthex/api/:apiKey/:fileName/mappings                   web.APIController.mappings(apiKey, fileName)
GET         /narthex/api/:apiKey/:fileName/ids/:since                 web.APIController.ids(apiKey, fileName, since)
GET         /narthex/api/:apiKey/:fileName/record/:id                 web.APIController.rawRecord(apiKey, fileName, id)
GET         /narthex/api/:apiKey/:fileName/record/:id/enriched        web.APIController.enrichedRecord(apiKey, fileName, id)
GET         /narthex/api/:apiKey/:fileName/index/*path                web.APIController.indexText(apiKey, fileName, path)
GET         /narthex/api/:apiKey/:fileName/unique/*path               web.APIController.uniqueText(apiKey, fileName, path)
GET         /narthex/api/:apiKey/:fileName/histogram/*path            web.APIController.histogramText(apiKey, fileName, path)

# todo: these should use OAuth
POST        /narthex/sip-creator/:apiKey/upload/:fileName             web.APIController.uploadOutput(apiKey, fileName)
POST        /narthex/sip-creator/:apiKey/sip-zip/:fileName            web.APIController.uploadSipZip(apiKey, fileName)
GET         /narthex/sip-creator/:apiKey/sip-zip/:fileName            web.APIController.downloadSipZip(apiKey, fileName)
GET         /narthex/sip-creator/:apiKey/sip-zip                      web.APIController.listSipZips(apiKey)

GET         /narthex/oai-pmh/:accessKey                               harvest.OaiPmh.service(accessKey)
GET         /narthex/oai-pmh/enriched/:accessKey                      harvest.OaiPmh.serviceEnriched(accessKey)

# Static
GET         /narthex/webjars/*file                                    controllers.WebJarAssets.at(file)
GET         /narthex/assets/*file                                     controllers.Assets.at(path="/public", file)
